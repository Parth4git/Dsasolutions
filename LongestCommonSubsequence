public class LongestCommonSubsequence {

    public static int longestCommonSubsequence(String A, String B) {
        int m = A.length();
        int n = B.length();

        // Create a 2D array to store the length of the longest common subsequence
        int[][] dp = new int[m + 1][n + 1];

        // Fill the dp array using bottom-up approach
        for (int i = 1; i <= m; i++) {
            for (int j = 1; j <= n; j++) {
                if (A.charAt(i - 1) == B.charAt(j - 1)) {
                    dp[i][j] = dp[i - 1][j - 1] + 1;
                } else {
                    dp[i][j] = Math.max(dp[i - 1][j], dp[i][j - 1]);
                }
            }
        }

        return dp[m][n];
    }

    public static void main(String[] args) {
        // Example usage:
        String A = "abbcdgf";
        String B = "bbadcgf";
        int result = longestCommonSubsequence(A, B);
        System.out.println(result);
    }
}
